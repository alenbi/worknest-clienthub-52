
// This file is automatically generated. Do not edit it directly.
import { createClient } from '@supabase/supabase-js';
import type { Database } from './types';

const SUPABASE_URL = "https://xmyqiplgjcaxpnojdxmk.supabase.co";
const SUPABASE_PUBLISHABLE_KEY = "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpc3MiOiJzdXBhYmFzZSIsInJlZiI6InhteXFpcGxnamNheHBub2pkeG1rIiwicm9sZSI6ImFub24iLCJpYXQiOjE3NDMyMjQ4MjksImV4cCI6MjA1ODgwMDgyOX0.tzxkW_UrwoRP5P1WI8AtH_L92qXbVRsv8TZK-s3AaFk";

// Import the supabase client like this:
// import { supabase } from "@/integrations/supabase/client";

export const supabase = createClient<Database>(SUPABASE_URL, SUPABASE_PUBLISHABLE_KEY, {
  auth: {
    autoRefreshToken: true,
    persistSession: true,
    detectSessionInUrl: true,
    storage: localStorage
  }
});

// Utility functions for common database operations
export async function fetchRequestsWithClientInfo() {
  try {
    const { data, error } = await supabase
      .from('requests')
      .select(`
        *,
        clients(name, email, company)
      `)
      .order('created_at', { ascending: false });
    
    if (error) {
      console.error("Error fetching requests with client info:", error);
      throw error;
    }
    
    return data.map(request => ({
      ...request,
      client_name: request.clients?.name,
      client_email: request.clients?.email,
      client_company: request.clients?.company
    }));
  } catch (error) {
    console.error("Failed to fetch requests with client info:", error);
    throw error;
  }
}

export async function fetchClientRequests(clientId: string) {
  try {
    const { data, error } = await supabase
      .from('requests')
      .select('*')
      .eq('client_id', clientId)
      .order('created_at', { ascending: false });
    
    if (error) {
      console.error("Error fetching client requests:", error);
      throw error;
    }
    
    return data;
  } catch (error) {
    console.error("Failed to fetch client requests:", error);
    throw error;
  }
}
